[{"C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\index.tsx":"1","C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\App.tsx":"2","C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\state\\tasks-reducer.ts":"3","C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\state\\todolists-reducer.ts":"4","C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\EditableSpan.tsx":"5","C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\state\\store.ts":"6","C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\Todolist.tsx":"7","C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\reportWebVitals.ts":"8","C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\AddItemForm.tsx":"9","C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\Task.tsx":"10","C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\stories\\Header.stories.tsx":"11","C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\AppWithRedux.stories.tsx":"12","C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\stories\\Page.stories.tsx":"13","C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\stories\\Page.tsx":"14","C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\stories\\Header.tsx":"15","C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\stories\\todolists-api.stories.tsx":"16","C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\api\\todolist-api.ts":"17","C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\AddItemForm.stories.tsx":"18","C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\state\\ReduxStoreProviderDecorator.tsx":"19","C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\Task.stories.tsx":"20","C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\EditableSpan.stories.tsx":"21"},{"size":641,"mtime":1611420546000,"results":"22","hashOfConfig":"23"},{"size":4777,"mtime":1611420546000,"results":"24","hashOfConfig":"23"},{"size":3577,"mtime":1611420546000,"results":"25","hashOfConfig":"23"},{"size":2569,"mtime":1611420546000,"results":"26","hashOfConfig":"23"},{"size":959,"mtime":1629652419843,"results":"27","hashOfConfig":"23"},{"size":892,"mtime":1629652419868,"results":"28","hashOfConfig":"23"},{"size":3487,"mtime":1629652419852,"results":"29","hashOfConfig":"23"},{"size":425,"mtime":1607869388000,"results":"30","hashOfConfig":"23"},{"size":1481,"mtime":1629652419821,"results":"31","hashOfConfig":"23"},{"size":1612,"mtime":1629652419849,"results":"32","hashOfConfig":"23"},{"size":473,"mtime":1629309586029,"results":"33","hashOfConfig":"23"},{"size":668,"mtime":1629652419835,"results":"34","hashOfConfig":"23"},{"size":571,"mtime":1629309586029,"results":"35","hashOfConfig":"23"},{"size":2474,"mtime":1629309586038,"results":"36","hashOfConfig":"23"},{"size":1386,"mtime":1629309586029,"results":"37","hashOfConfig":"23"},{"size":3118,"mtime":1629656496829,"results":"38","hashOfConfig":"23"},{"size":3769,"mtime":1629652419856,"results":"39","hashOfConfig":"23"},{"size":707,"mtime":1629387383625,"results":"40","hashOfConfig":"23"},{"size":1169,"mtime":1629652419866,"results":"41","hashOfConfig":"23"},{"size":1250,"mtime":1629652419846,"results":"42","hashOfConfig":"23"},{"size":838,"mtime":1629652419839,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1ehgr5",{"filePath":"47","messages":"48","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\index.tsx",[],["94","95"],"C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\App.tsx",["96","97","98","99","100","101","102","103","104","105","106","107","108"],"import React, {useCallback, useReducer, useState} from 'react'\r\nimport './App.css';\r\nimport {TaskType, Todolist} from './Todolist';\r\nimport {v1} from 'uuid';\r\nimport {AddItemForm} from './AddItemForm';\r\nimport {AppBar, Button, Container, Grid, IconButton, Paper, Toolbar, Typography} from '@material-ui/core';\r\nimport {Menu} from '@material-ui/icons';\r\nimport {\r\n    addTodolistAC,\r\n    changeTodolistFilterAC,\r\n    changeTodolistTitleAC,\r\n    removeTodolistAC,\r\n    todolistsReducer\r\n} from './state/todolists-reducer';\r\nimport {addTaskAC, changeTaskStatusAC, changeTaskTitleAC, removeTaskAC, tasksReducer} from './state/tasks-reducer';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from './state/store';\r\n\r\nexport type FilterValuesType = \"all\" | \"active\" | \"completed\";\r\nexport type TodolistType = {\r\n    id: string\r\n    title: string\r\n    filter: FilterValuesType\r\n}\r\n\r\nexport type TasksStateType = {\r\n    [key: string]: Array<TaskType>\r\n}\r\n\r\n\r\nfunction App() {\r\n    let todolistId1 = v1();\r\n    let todolistId2 = v1();\r\n\r\n    const todolists = useSelector<AppRootStateType, Array<TodolistType>>(state => state.todolists)\r\n    const tasks = useSelector<AppRootStateType, TasksStateType>(state => state.tasks)\r\n    const dispatch = useDispatch();\r\n\r\n    const removeTask = useCallback(function (id: string, todolistId: string) {\r\n        const action = removeTaskAC(id, todolistId);\r\n        dispatch(action);\r\n    }, []);\r\n\r\n    const addTask = useCallback(function (title: string, todolistId: string) {\r\n        const action = addTaskAC(title, todolistId);\r\n        dispatch(action);\r\n    }, []);\r\n\r\n    const changeStatus = useCallback(function (id: string, isDone: boolean, todolistId: string) {\r\n        const action = changeTaskStatusAC(id, isDone, todolistId);\r\n        dispatch(action);\r\n    }, []);\r\n\r\n    const changeTaskTitle = useCallback(function (id: string, newTitle: string, todolistId: string) {\r\n        const action = changeTaskTitleAC(id, newTitle, todolistId);\r\n        dispatch(action);\r\n    }, []);\r\n\r\n    const changeFilter = useCallback(function (value: FilterValuesType, todolistId: string) {\r\n        const action = changeTodolistFilterAC(todolistId, value);\r\n        dispatch(action);\r\n    }, []);\r\n\r\n    const removeTodolist = useCallback(function (id: string) {\r\n        const action = removeTodolistAC(id);\r\n        dispatch(action);\r\n    }, []);\r\n\r\n    const changeTodolistTitle = useCallback(function (id: string, title: string) {\r\n        const action = changeTodolistTitleAC(id, title);\r\n        dispatch(action);\r\n    }, []);\r\n\r\n    const addTodolist = useCallback((title: string) => {\r\n        const action = addTodolistAC(title);\r\n        dispatch(action);\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\r\n                        <Menu/>\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\">\r\n                        News\r\n                    </Typography>\r\n                    <Button color=\"inherit\">Login</Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Container fixed>\r\n                <Grid container style={{padding: \"20px\"}}>\r\n                    <AddItemForm addItem={addTodolist}/>\r\n                </Grid>\r\n                <Grid container spacing={3}>\r\n                    {\r\n                        todolists.map(tl => {\r\n                            let allTodolistTasks = tasks[tl.id];\r\n\r\n                            return <Grid item key={tl.id}>\r\n                                <Paper style={{padding: \"10px\"}}>\r\n                                    <Todolist\r\n                                        id={tl.id}\r\n                                        title={tl.title}\r\n                                        tasks={allTodolistTasks}\r\n                                        removeTask={removeTask}\r\n                                        changeFilter={changeFilter}\r\n                                        addTask={addTask}\r\n                                        changeTaskStatus={changeStatus}\r\n                                        filter={tl.filter}\r\n                                        removeTodolist={removeTodolist}\r\n                                        changeTaskTitle={changeTaskTitle}\r\n                                        changeTodolistTitle={changeTodolistTitle}\r\n                                    />\r\n                                </Paper>\r\n                            </Grid>\r\n                        })\r\n                    }\r\n                </Grid>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\state\\tasks-reducer.ts",["109"],"import {TaskType} from '../Todolist';\r\nimport {v1} from 'uuid';\r\nimport {AddTodolistActionType, RemoveTodolistActionType} from './todolists-reducer';\r\nimport {TasksStateType} from '../App';\r\n\r\nexport type RemoveTaskActionType = {\r\n    type: 'REMOVE-TASK',\r\n    todolistId: string\r\n    taskId: string\r\n}\r\n\r\nexport type AddTaskActionType = {\r\n    type: 'ADD-TASK',\r\n    todolistId: string\r\n    title: string\r\n}\r\n\r\nexport type ChangeTaskStatusActionType = {\r\n    type: 'CHANGE-TASK-STATUS',\r\n    todolistId: string\r\n    taskId: string\r\n    isDone: boolean\r\n}\r\n\r\nexport type ChangeTaskTitleActionType = {\r\n    type: 'CHANGE-TASK-TITLE',\r\n    todolistId: string\r\n    taskId: string\r\n    title: string\r\n}\r\n\r\ntype ActionsType = RemoveTaskActionType | AddTaskActionType\r\n    | ChangeTaskStatusActionType\r\n    | ChangeTaskTitleActionType\r\n    | AddTodolistActionType\r\n    | RemoveTodolistActionType\r\n\r\nconst initialState: TasksStateType = {}\r\n\r\nexport const tasksReducer = (state: TasksStateType = initialState, action: ActionsType): TasksStateType => {\r\n    switch (action.type) {\r\n        case 'REMOVE-TASK': {\r\n            const stateCopy = {...state}\r\n            const tasks = stateCopy[action.todolistId];\r\n            const newTasks = tasks.filter(t => t.id != action.taskId);\r\n            stateCopy[action.todolistId] = newTasks;\r\n            return stateCopy;\r\n        }\r\n        case 'ADD-TASK': {\r\n            const stateCopy = {...state}\r\n            const newTask: TaskType = {\r\n                id: v1(),\r\n                title: action.title,\r\n                isDone: false\r\n            }\r\n            const tasks = stateCopy[action.todolistId];\r\n            const newTasks = [newTask, ...tasks];\r\n            stateCopy[action.todolistId] = newTasks;\r\n            return stateCopy;\r\n        }\r\n        case 'CHANGE-TASK-STATUS': {\r\n            let todolistTasks = state[action.todolistId];\r\n            let newTasksArray = todolistTasks\r\n                .map(t => t.id === action.taskId ? {...t, isDone: action.isDone} : t);\r\n\r\n            state[action.todolistId] = newTasksArray;\r\n            return ({...state});\r\n        }\r\n        case 'CHANGE-TASK-TITLE': {\r\n            let todolistTasks = state[action.todolistId];\r\n            // найдём нужную таску:\r\n            let newTasksArray = todolistTasks\r\n                .map(t => t.id === action.taskId ? {...t, title: action.title} : t);\r\n\r\n            state[action.todolistId] = newTasksArray;\r\n            return ({...state});\r\n        }\r\n        case 'ADD-TODOLIST': {\r\n            return {\r\n                ...state,\r\n                [action.todolistId]: []\r\n            }\r\n        }\r\n        case 'REMOVE-TODOLIST': {\r\n            const copyState = {...state};\r\n            delete copyState[action.id];\r\n            return copyState;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const removeTaskAC = (taskId: string, todolistId: string): RemoveTaskActionType => {\r\n    return {type: 'REMOVE-TASK', taskId: taskId, todolistId: todolistId}\r\n}\r\nexport const addTaskAC = (title: string, todolistId: string): AddTaskActionType => {\r\n    return {type: 'ADD-TASK', title, todolistId}\r\n}\r\nexport const changeTaskStatusAC = (taskId: string, isDone: boolean, todolistId: string): ChangeTaskStatusActionType => {\r\n    return {type: 'CHANGE-TASK-STATUS', isDone, todolistId, taskId}\r\n}\r\nexport const changeTaskTitleAC = (taskId: string, title: string, todolistId: string): ChangeTaskTitleActionType => {\r\n    return {type: 'CHANGE-TASK-TITLE', title, todolistId, taskId}\r\n}\r\n\r\n","C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\state\\todolists-reducer.ts",["110"],"import {v1} from 'uuid';\r\nimport {FilterValuesType, TodolistType} from '../App';\r\n\r\nexport type RemoveTodolistActionType = {\r\n    type: 'REMOVE-TODOLIST',\r\n    id: string\r\n}\r\nexport type AddTodolistActionType = {\r\n    type: 'ADD-TODOLIST',\r\n    title: string\r\n    todolistId: string\r\n}\r\nexport type ChangeTodolistTitleActionType = {\r\n    type: 'CHANGE-TODOLIST-TITLE',\r\n    id: string\r\n    title: string\r\n}\r\nexport type ChangeTodolistFilterActionType = {\r\n    type: 'CHANGE-TODOLIST-FILTER',\r\n    id: string\r\n    filter: FilterValuesType\r\n}\r\n\r\ntype ActionsType = RemoveTodolistActionType | AddTodolistActionType\r\n    | ChangeTodolistTitleActionType\r\n    | ChangeTodolistFilterActionType\r\n\r\nconst initialState: Array<TodolistType> =  []\r\n\r\nexport const todolistsReducer = (state: Array<TodolistType> = initialState, action: ActionsType): Array<TodolistType> => {\r\n    switch (action.type) {\r\n        case 'REMOVE-TODOLIST': {\r\n            return state.filter(tl => tl.id != action.id)\r\n        }\r\n        case 'ADD-TODOLIST': {\r\n            return [{\r\n                id: action.todolistId,\r\n                title: action.title,\r\n                filter: 'all'\r\n            }, ...state]\r\n        }\r\n        case 'CHANGE-TODOLIST-TITLE': {\r\n            const todolist = state.find(tl => tl.id === action.id);\r\n            if (todolist) {\r\n                // если нашёлся - изменим ему заголовок\r\n                todolist.title = action.title;\r\n            }\r\n            return [...state]\r\n        }\r\n        case 'CHANGE-TODOLIST-FILTER': {\r\n            const todolist = state.find(tl => tl.id === action.id);\r\n            if (todolist) {\r\n                // если нашёлся - изменим ему заголовок\r\n                todolist.filter = action.filter;\r\n            }\r\n            return [...state]\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const removeTodolistAC = (todolistId: string): RemoveTodolistActionType => {\r\n    return { type: 'REMOVE-TODOLIST', id: todolistId}\r\n}\r\nexport const addTodolistAC = (title: string): AddTodolistActionType => {\r\n    return { type: 'ADD-TODOLIST', title: title, todolistId: v1()}\r\n}\r\nexport const changeTodolistTitleAC = (id: string, title: string): ChangeTodolistTitleActionType => {\r\n    return { type: 'CHANGE-TODOLIST-TITLE', id: id, title: title}\r\n}\r\nexport const changeTodolistFilterAC = (id: string, filter: FilterValuesType): ChangeTodolistFilterActionType => {\r\n    return { type: 'CHANGE-TODOLIST-FILTER', id: id, filter: filter}\r\n}\r\n\r\n",["111","112"],"C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\EditableSpan.tsx",[],"C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\state\\store.ts",[],"C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\Todolist.tsx",["113","114","115","116","117"],"import React, {useCallback} from 'react'\r\nimport {AddItemForm} from './AddItemForm'\r\nimport {EditableSpan} from './EditableSpan'\r\nimport {Button, IconButton} from '@material-ui/core'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {Task} from './Task'\r\nimport {FilterValuesType} from './App';\r\n\r\nexport type TaskType = {\r\n    id: string\r\n    title: string\r\n    isDone: boolean\r\n}\r\n\r\ntype PropsType = {\r\n    id: string\r\n    title: string\r\n    tasks: Array<TaskType>\r\n    changeFilter: (value: FilterValuesType, todolistId: string) => void\r\n    addTask: (title: string, todolistId: string) => void\r\n    changeTaskStatus: (id: string, isDone: boolean, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n    removeTodolist: (id: string) => void\r\n    changeTodolistTitle: (id: string, newTitle: string) => void\r\n    filter: FilterValuesType\r\n\r\n}\r\n\r\nexport const Todolist = React.memo(function (props: PropsType) {\r\n    console.log('Todolist called')\r\n\r\n    const addTask = useCallback((title: string) => {\r\n        props.addTask(title, props.id)\r\n    }, [props.addTask, props.id])\r\n\r\n    const removeTodolist = () => {\r\n        props.removeTodolist(props.id)\r\n    }\r\n    const changeTodolistTitle = useCallback((title: string) => {\r\n        props.changeTodolistTitle(props.id, title)\r\n    }, [props.id, props.changeTodolistTitle])\r\n\r\n    const onAllClickHandler = useCallback(() => props.changeFilter('all', props.id), [props.id, props.changeFilter])\r\n    const onActiveClickHandler = useCallback(() => props.changeFilter('active', props.id), [props.id, props.changeFilter])\r\n    const onCompletedClickHandler = useCallback(() => props.changeFilter('completed', props.id), [props.id, props.changeFilter])\r\n\r\n\r\n    let tasksForTodolist = props.tasks\r\n\r\n    if (props.filter === 'active') {\r\n        tasksForTodolist = props.tasks.filter(t => t.isDone === false)\r\n    }\r\n    if (props.filter === 'completed') {\r\n        tasksForTodolist = props.tasks.filter(t => t.isDone === true)\r\n    }\r\n\r\n    return <div>\r\n        <h3><EditableSpan value={props.title} onChange={changeTodolistTitle}/>\r\n            <IconButton onClick={removeTodolist}>\r\n                <Delete/>\r\n            </IconButton>\r\n        </h3>\r\n        <AddItemForm addItem={addTask}/>\r\n        <div>\r\n            {\r\n                tasksForTodolist.map(t => <Task key={t.id} task={t} todolistId={props.id}\r\n                                          removeTask={props.removeTask}\r\n                                          changeTaskTitle={props.changeTaskTitle}\r\n                                          changeTaskStatus={props.changeTaskStatus}\r\n                    />)\r\n            }\r\n        </div>\r\n        <div style={{paddingTop: '10px'}}>\r\n            <Button variant={props.filter === 'all' ? 'outlined' : 'text'}\r\n                    onClick={onAllClickHandler}\r\n                    color={'default'}\r\n            >All\r\n            </Button>\r\n            <Button variant={props.filter === 'active' ? 'outlined' : 'text'}\r\n                    onClick={onActiveClickHandler}\r\n                    color={'primary'}>Active\r\n            </Button>\r\n            <Button variant={props.filter === 'completed' ? 'outlined' : 'text'}\r\n                    onClick={onCompletedClickHandler}\r\n                    color={'secondary'}>Completed\r\n            </Button>\r\n        </div>\r\n    </div>\r\n})\r\n\r\n\r\n",["118","119"],"C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\reportWebVitals.ts",[],"C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\AddItemForm.tsx",["120","121","122"],"C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\Task.tsx",["123","124","125"],"C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\stories\\Header.stories.tsx",[],["126","127"],"C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\AppWithRedux.stories.tsx",["128","129"],"C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\stories\\Page.stories.tsx",[],"C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\stories\\Page.tsx",[],"C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\stories\\Header.tsx",[],"C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\stories\\todolists-api.stories.tsx",["130"],"C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\api\\todolist-api.ts",[],"C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\AddItemForm.stories.tsx",[],"C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\state\\ReduxStoreProviderDecorator.tsx",["131","132","133"],"C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\Task.stories.tsx",[],"C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\EditableSpan.stories.tsx",[],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":1,"column":29,"nodeType":"140","messageId":"141","endLine":1,"endColumn":39},{"ruleId":"138","severity":1,"message":"142","line":1,"column":41,"nodeType":"140","messageId":"141","endLine":1,"endColumn":49},{"ruleId":"138","severity":1,"message":"143","line":13,"column":5,"nodeType":"140","messageId":"141","endLine":13,"endColumn":21},{"ruleId":"138","severity":1,"message":"144","line":15,"column":73,"nodeType":"140","messageId":"141","endLine":15,"endColumn":85},{"ruleId":"138","severity":1,"message":"145","line":32,"column":9,"nodeType":"140","messageId":"141","endLine":32,"endColumn":20},{"ruleId":"138","severity":1,"message":"146","line":33,"column":9,"nodeType":"140","messageId":"141","endLine":33,"endColumn":20},{"ruleId":"147","severity":1,"message":"148","line":42,"column":8,"nodeType":"149","endLine":42,"endColumn":10,"suggestions":"150"},{"ruleId":"147","severity":1,"message":"148","line":47,"column":8,"nodeType":"149","endLine":47,"endColumn":10,"suggestions":"151"},{"ruleId":"147","severity":1,"message":"148","line":52,"column":8,"nodeType":"149","endLine":52,"endColumn":10,"suggestions":"152"},{"ruleId":"147","severity":1,"message":"148","line":57,"column":8,"nodeType":"149","endLine":57,"endColumn":10,"suggestions":"153"},{"ruleId":"147","severity":1,"message":"148","line":62,"column":8,"nodeType":"149","endLine":62,"endColumn":10,"suggestions":"154"},{"ruleId":"147","severity":1,"message":"148","line":67,"column":8,"nodeType":"149","endLine":67,"endColumn":10,"suggestions":"155"},{"ruleId":"147","severity":1,"message":"148","line":72,"column":8,"nodeType":"149","endLine":72,"endColumn":10,"suggestions":"156"},{"ruleId":"157","severity":1,"message":"158","line":45,"column":53,"nodeType":"159","messageId":"160","endLine":45,"endColumn":55},{"ruleId":"157","severity":1,"message":"158","line":33,"column":45,"nodeType":"159","messageId":"160","endLine":33,"endColumn":47},{"ruleId":"134","replacedBy":"161"},{"ruleId":"136","replacedBy":"162"},{"ruleId":"147","severity":1,"message":"163","line":35,"column":8,"nodeType":"149","endLine":35,"endColumn":33,"suggestions":"164"},{"ruleId":"147","severity":1,"message":"163","line":42,"column":8,"nodeType":"149","endLine":42,"endColumn":45,"suggestions":"165"},{"ruleId":"147","severity":1,"message":"163","line":44,"column":86,"nodeType":"149","endLine":44,"endColumn":116,"suggestions":"166"},{"ruleId":"147","severity":1,"message":"163","line":45,"column":92,"nodeType":"149","endLine":45,"endColumn":122,"suggestions":"167"},{"ruleId":"147","severity":1,"message":"163","line":46,"column":98,"nodeType":"149","endLine":46,"endColumn":128,"suggestions":"168"},{"ruleId":"134","replacedBy":"169"},{"ruleId":"136","replacedBy":"170"},{"ruleId":"138","severity":1,"message":"171","line":2,"column":9,"nodeType":"140","messageId":"141","endLine":2,"endColumn":12},{"ruleId":"138","severity":1,"message":"172","line":2,"column":14,"nodeType":"140","messageId":"141","endLine":2,"endColumn":20},{"ruleId":"138","severity":1,"message":"173","line":2,"column":22,"nodeType":"140","messageId":"141","endLine":2,"endColumn":33},{"ruleId":"147","severity":1,"message":"163","line":16,"column":97,"nodeType":"149","endLine":16,"endColumn":130,"suggestions":"174"},{"ruleId":"147","severity":1,"message":"163","line":21,"column":8,"nodeType":"149","endLine":21,"endColumn":41,"suggestions":"175"},{"ruleId":"147","severity":1,"message":"163","line":25,"column":8,"nodeType":"149","endLine":25,"endColumn":41,"suggestions":"176"},{"ruleId":"134","replacedBy":"177"},{"ruleId":"136","replacedBy":"178"},{"ruleId":"138","severity":1,"message":"179","line":3,"column":9,"nodeType":"140","messageId":"141","endLine":3,"endColumn":15},{"ruleId":"138","severity":1,"message":"180","line":5,"column":9,"nodeType":"140","messageId":"141","endLine":5,"endColumn":25},{"ruleId":"181","severity":1,"message":"182","line":4,"column":1,"nodeType":"183","endLine":6,"endColumn":2},{"ruleId":"138","severity":1,"message":"184","line":1,"column":27,"nodeType":"140","messageId":"141","endLine":1,"endColumn":32},{"ruleId":"185","severity":1,"message":"186","line":21,"column":9,"nodeType":"187","messageId":"188","endLine":24,"endColumn":10,"fix":"189"},{"ruleId":"185","severity":1,"message":"190","line":25,"column":9,"nodeType":"187","messageId":"188","endLine":28,"endColumn":10,"fix":"191"},"no-native-reassign",["192"],"no-negated-in-lhs",["193"],"@typescript-eslint/no-unused-vars","'useReducer' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'todolistsReducer' is defined but never used.","'tasksReducer' is defined but never used.","'todolistId1' is assigned a value but never used.","'todolistId2' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["194"],["195"],["196"],["197"],["198"],["199"],["200"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["192"],["193"],"React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["201"],["202"],["203"],["204"],["205"],["192"],["193"],"'Box' is defined but never used.","'Button' is defined but never used.","'FormControl' is defined but never used.",["206"],["207"],["208"],["192"],["193"],"'action' is defined but never used.","'AppRootStateType' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'store' is defined but never used.","no-useless-computed-key","Unnecessarily computed property [\"todolistId1\"] found.","Property","unnecessarilyComputedProperty",{"range":"209","text":"210"},"Unnecessarily computed property [\"todolistId2\"] found.",{"range":"211","text":"212"},"no-global-assign","no-unsafe-negation",{"desc":"213","fix":"214"},{"desc":"213","fix":"215"},{"desc":"213","fix":"216"},{"desc":"213","fix":"217"},{"desc":"213","fix":"218"},{"desc":"213","fix":"219"},{"desc":"213","fix":"220"},{"desc":"221","fix":"222"},{"desc":"221","fix":"223"},{"desc":"221","fix":"224"},{"desc":"221","fix":"225"},{"desc":"221","fix":"226"},{"desc":"221","fix":"227"},{"desc":"221","fix":"228"},{"desc":"221","fix":"229"},[620,635],"\"todolistId1\"",[769,784],"\"todolistId2\"","Update the dependencies array to be: [dispatch]",{"range":"230","text":"231"},{"range":"232","text":"231"},{"range":"233","text":"231"},{"range":"234","text":"231"},{"range":"235","text":"231"},{"range":"236","text":"231"},{"range":"237","text":"231"},"Update the dependencies array to be: [props]",{"range":"238","text":"239"},{"range":"240","text":"239"},{"range":"241","text":"239"},{"range":"242","text":"239"},{"range":"243","text":"239"},{"range":"244","text":"239"},{"range":"245","text":"239"},{"range":"246","text":"239"},[1456,1458],"[dispatch]",[1632,1634],[1841,1843],[2055,2057],[2259,2261],[2411,2413],[2595,2597],[1177,1202],"[props]",[1415,1452],[1542,1572],[1666,1696],[1796,1826],[702,735],[964,997],[1154,1187]]