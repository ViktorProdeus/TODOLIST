[{"C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\index.tsx":"1","C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\App.tsx":"2","C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\state\\tasks-reducer.ts":"3","C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\state\\todolists-reducer.ts":"4","C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\EditableSpan.tsx":"5","C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\state\\store.ts":"6","C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\Todolist.tsx":"7","C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\reportWebVitals.ts":"8","C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\AddItemForm.tsx":"9","C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\Task.tsx":"10","C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\stories\\todolists-api.stories.tsx":"11","C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\api\\todolist-api.ts":"12","C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\stories\\tasks-api.stories.tsx":"13","C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\api\\tasks-api.ts":"14","C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\api\\instance.ts":"15"},{"size":641,"mtime":1611420546000,"results":"16","hashOfConfig":"17"},{"size":4770,"mtime":1633196106311,"results":"18","hashOfConfig":"17"},{"size":3577,"mtime":1611420546000,"results":"19","hashOfConfig":"17"},{"size":2666,"mtime":1633192643078,"results":"20","hashOfConfig":"17"},{"size":959,"mtime":1629652419843,"results":"21","hashOfConfig":"17"},{"size":469,"mtime":1633197454925,"results":"22","hashOfConfig":"17"},{"size":3592,"mtime":1633195185929,"results":"23","hashOfConfig":"17"},{"size":425,"mtime":1607869388000,"results":"24","hashOfConfig":"17"},{"size":1455,"mtime":1633034924589,"results":"25","hashOfConfig":"17"},{"size":1674,"mtime":1633196592832,"results":"26","hashOfConfig":"17"},{"size":2095,"mtime":1633208436061,"results":"27","hashOfConfig":"17"},{"size":1645,"mtime":1633206657865,"results":"28","hashOfConfig":"17"},{"size":1935,"mtime":1633207592627,"results":"29","hashOfConfig":"17"},{"size":1720,"mtime":1633197454910,"results":"30","hashOfConfig":"17"},{"size":295,"mtime":1633096704474,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1ehgr5",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\index.tsx",[],["64","65"],"C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\App.tsx",[],"C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\state\\tasks-reducer.ts",["66"],"import {TaskType} from '../Todolist';\r\nimport {v1} from 'uuid';\r\nimport {AddTodolistActionType, RemoveTodolistActionType} from './todolists-reducer';\r\nimport {TasksStateType} from '../App';\r\n\r\nexport type RemoveTaskActionType = {\r\n    type: 'REMOVE-TASK',\r\n    todolistId: string\r\n    taskId: string\r\n}\r\n\r\nexport type AddTaskActionType = {\r\n    type: 'ADD-TASK',\r\n    todolistId: string\r\n    title: string\r\n}\r\n\r\nexport type ChangeTaskStatusActionType = {\r\n    type: 'CHANGE-TASK-STATUS',\r\n    todolistId: string\r\n    taskId: string\r\n    isDone: boolean\r\n}\r\n\r\nexport type ChangeTaskTitleActionType = {\r\n    type: 'CHANGE-TASK-TITLE',\r\n    todolistId: string\r\n    taskId: string\r\n    title: string\r\n}\r\n\r\ntype ActionsType = RemoveTaskActionType | AddTaskActionType\r\n    | ChangeTaskStatusActionType\r\n    | ChangeTaskTitleActionType\r\n    | AddTodolistActionType\r\n    | RemoveTodolistActionType\r\n\r\nconst initialState: TasksStateType = {}\r\n\r\nexport const tasksReducer = (state: TasksStateType = initialState, action: ActionsType): TasksStateType => {\r\n    switch (action.type) {\r\n        case 'REMOVE-TASK': {\r\n            const stateCopy = {...state}\r\n            const tasks = stateCopy[action.todolistId];\r\n            const newTasks = tasks.filter(t => t.id != action.taskId);\r\n            stateCopy[action.todolistId] = newTasks;\r\n            return stateCopy;\r\n        }\r\n        case 'ADD-TASK': {\r\n            const stateCopy = {...state}\r\n            const newTask: TaskType = {\r\n                id: v1(),\r\n                title: action.title,\r\n                isDone: false\r\n            }\r\n            const tasks = stateCopy[action.todolistId];\r\n            const newTasks = [newTask, ...tasks];\r\n            stateCopy[action.todolistId] = newTasks;\r\n            return stateCopy;\r\n        }\r\n        case 'CHANGE-TASK-STATUS': {\r\n            let todolistTasks = state[action.todolistId];\r\n            let newTasksArray = todolistTasks\r\n                .map(t => t.id === action.taskId ? {...t, isDone: action.isDone} : t);\r\n\r\n            state[action.todolistId] = newTasksArray;\r\n            return ({...state});\r\n        }\r\n        case 'CHANGE-TASK-TITLE': {\r\n            let todolistTasks = state[action.todolistId];\r\n            // найдём нужную таску:\r\n            let newTasksArray = todolistTasks\r\n                .map(t => t.id === action.taskId ? {...t, title: action.title} : t);\r\n\r\n            state[action.todolistId] = newTasksArray;\r\n            return ({...state});\r\n        }\r\n        case 'ADD-TODOLIST': {\r\n            return {\r\n                ...state,\r\n                [action.todolistId]: []\r\n            }\r\n        }\r\n        case 'REMOVE-TODOLIST': {\r\n            const copyState = {...state};\r\n            delete copyState[action.id];\r\n            return copyState;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const removeTaskAC = (taskId: string, todolistId: string): RemoveTaskActionType => {\r\n    return {type: 'REMOVE-TASK', taskId: taskId, todolistId: todolistId}\r\n}\r\nexport const addTaskAC = (title: string, todolistId: string): AddTaskActionType => {\r\n    return {type: 'ADD-TASK', title, todolistId}\r\n}\r\nexport const changeTaskStatusAC = (taskId: string, isDone: boolean, todolistId: string): ChangeTaskStatusActionType => {\r\n    return {type: 'CHANGE-TASK-STATUS', isDone, todolistId, taskId}\r\n}\r\nexport const changeTaskTitleAC = (taskId: string, title: string, todolistId: string): ChangeTaskTitleActionType => {\r\n    return {type: 'CHANGE-TASK-TITLE', title, todolistId, taskId}\r\n}\r\n\r\n","C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\state\\todolists-reducer.ts",[],"C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\EditableSpan.tsx",[],"C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\state\\store.ts",[],"C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\Todolist.tsx",[],"C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\reportWebVitals.ts",[],"C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\AddItemForm.tsx",[],"C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\Task.tsx",[],"C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\stories\\todolists-api.stories.tsx",["67"],"C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\api\\todolist-api.ts",[],"C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\stories\\tasks-api.stories.tsx",["68"],"C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\api\\tasks-api.ts",[],"C:\\_stady\\it-incubator\\TODOLIST-TS\\todolist\\src\\api\\instance.ts",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":45,"column":53,"nodeType":"75","messageId":"76","endLine":45,"endColumn":55},{"ruleId":"77","severity":1,"message":"78","line":4,"column":1,"nodeType":"79","endLine":6,"endColumn":2},{"ruleId":"77","severity":1,"message":"78","line":4,"column":1,"nodeType":"79","endLine":6,"endColumn":2},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]